"use strict";angular.module("utorrentNgwebuiApp",["templates-views","ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ui.bootstrap","vs-repeat","toastr","angularFileUpload","pascalprecht.translate"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"TorrentsCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).when("/settings",{templateUrl:"views/settings.html",controller:"SettingsCtrl"}).otherwise({redirectTo:"/"})}]).config(["$translateProvider",function(a){a.determinePreferredLanguage().useLoader("translationsLoader").fallbackLanguage("en")}]).controller("NavController",["$scope","uTorrentService","$http","$cookies","$log","$translate","translationsLoader",function(a,b,c,d,e,f,g){g("getoptions").then(function(b){var c,e,g=[];for(e in b.languages)g.push({id:e,desc:b.languages[e]});g.sort(function(a,b){return a.desc===b.desc?0:a.desc>b.desc?1:-1}),a.languages=g,c=d.language,c?f.use(c):(c=f.preferredLanguage().split("_")[0],f.use(c)),a.languageDesc=b.languages[c],a.changeLanguage=function(b){b.id!==f.use()&&(f.use(b.id),a.languageDesc=b.desc,d.language=b.id)}}),a.alerts=[],a.closeAlert=function(b){a.alerts.splice(b,1)};var h=d.lastUpdateCheck,i=(new Date).getTime(),j=function(a,b){var c,d,e;if(a===b)return!1;for(c=a.replace("v","").split("."),d=b.replace("v","").split("."),e=0;e<c.length;++e)c[e]=Number(c[e]);for(e=0;e<d.length;++e)d[e]=Number(d[e]);return 2===c.length&&(c[2]=0),c[0]>d[0]?!0:c[0]<d[0]?!1:c[1]>d[1]?!0:c[1]<d[1]?!1:c[2]>d[2]?!0:c[2]<d[2]?!1:!0};c.get("bower.json").then(function(b){var f="v"+b.data.version;d.currentVersion!==f&&(h=void 0,delete d.updatedVersion,delete d.lastUpdateCheck,delete a.updatedVersion,delete a.lastUpdateCheck),d.currentVersion=f,a.currentVersion=d.currentVersion,void 0===h||i-h>36e6?c({method:"GET",url:"https://api.github.com/repos/psychowood/ng-torrent-ui/releases?per_page=1",headers:{Accept:"application/vnd.github.v3+json"}}).then(function(b){if(d.lastUpdateCheck=i,b.data&&b.data.length>0){var c=b.data[0],g="tag_name",h=c[g];j(f,h)?d.updatedVersion!==h&&(a.alerts.push({type:"info",msg:"New version available: "+h}),d.updatedVersion=h):delete d.updatedVersion}else e.warning("can't check latest release")}):e.info("Version already checked in the last hour")}),a.updatedVersion=d.updatedVersion,b.init().then(function(){var c=b.actions().getsettings();return c.$promise.then(function(){a.serverVersion=b.getVersion()}),c},function(){a.alerts.push({type:"danger",msg:"Service unavailable"})})}]).directive("focusMe",["$timeout",function(a){return{priority:1,link:function(b,c){a(function(){c[0].focus()},250)}}}]),angular.module("templates-views",["views/about.html","views/details-dialog.html","views/main.html","views/nav.html","views/settings.html","views/torrent-row.html"]),angular.module("views/about.html",[]).run(["$templateCache",function(a){a.put("views/about.html",'<br/>\n<h4>Welcome to ng-torrent-ui, I hope you are enjoying your stay.\nIf you want to discuss or get support, you can catch me at the official <a target="_BLANK" href="https://plus.google.com/communities/102445612191587383590">Google Community</a>.</h4>\n\n<h3>Issue reporting</h3>\n<p ng-controller="IssueReporterCtrl">The best way to let me know if there is something not working as expected is <a target="_BLANK" href="{{newIssueUrl}}" ng-click="prepareNewIssueUrl()">opening an issue</a> on GitHub or <a href="{{newMailUrl}}" ng-click="prepareNewMailUrl()">sending me a mail</a>.</p>\n\n<h3>Sources</h3>\n<p>Sources and documentation available on my <a href="https://github.com/psychowood/ng-torrent-ui">GitHub page</a>.</p>\n\n<h3>Donations</h3>\n<p>This is developed during my free time so, if you are willing to offer me a beer and support this project, you are welcome :)</p>\n<p>You can donate with paypal in <a target="_BLANK" href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=84LH348H27CN6">EUR</a> or <a target="_BLANK" href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=7Z88PRASGESGQ">USD</a>.</p>\n\n<h3>Privacy</h3>\n<p>The main page includes a Google Analytics tag. It is used just to count pageviews, and nothing else is tracked.</p>\n<p>The tag can be easily removed from index.html by hand if you believe this could be a problem.</p>\n\n<h3>What about the old Web UI?</h3>\n<p>If you need access it is available <a href="/gui/classic/index.html">here</a>.</p>\n')}]),angular.module("views/details-dialog.html",[]).run(["$templateCache",function(a){a.put("views/details-dialog.html",'<div class="modal-header details-header">\n  <h3 class="modal-title"><button type=button ng-click="$dismiss()" class="btn btn-primary pull-right" ><span class="glyphicon glyphicon-remove"></span></button>{{torrent.decodedName}}</h3>\n    <div class="details-progress">\n      <progressbar max="1000" ng-class="{\'progress-striped active\':(torrent.uploadSpeed !== 0 || torrent.downloadSpeed !== 0)}" type="{{ ((torrent.percent < 250)?\'warning\':((torrent.percent < 999)?\'info\':\'success\')) }}" value="torrent.percent">{{torrent.percent/10}}% </progressbar>\n    </div>\n</div>\n<div class="modal-body details-body">\n  <!-- <div><b>ETA:</b> {{torrent.eta}}</div> -->\n  <div><b>{{\'OV_COL_NAME\' | translate}}:</b> {{torrent.name}}</div>\n  <div><b>{{\'GN_TP_10\' | translate}}:</b> {{torrent.hash}}</div>\n  <div><b>{{\'OV_COL_SIZE\' | translate}}:</b> {{torrent.getSizeStrArr()[0]}}{{torrent.getSizeStrArr()[1]}}</div>\n  <div><b>{{\'OV_COL_STATUS\' | translate}}:</b> <i ng-repeat="status in torrent.statusesCached">\n      {{ status }}<span ng-if="!$last">,</span>\n    </i></div>\n  <div><b>{{\'OV_COL_LABEL\' | translate}}:</b>  <i ng-repeat="label in torrent.getLabels()">\n      {{ label }}<span ng-if="!$last">,</span>\n    </i></div>\n  <div><b>{{\'PRS_COL_CLIENT\' | translate}}:</b>\n    {{\'GN_TP_03\' | translate}} {{torrent.seedsConnected}} <span ng-if="torrent.seedsInSwarm > 0"> / {{torrent.seedsInSwarm}}</span>,\n    {{\'GN_TP_07\' | translate}} {{torrent.peersConnected}} <span ng-if="torrent.seedsInSwarm > 0"> / {{torrent.peersInSwarm}}</span>,\n    {{\'GN_TP_08\' | translate}} {{torrent.ratio/1000}}%\n  </div>\n  <div><b>{{\'GN_TRANSFER\' | translate}}:</b>\n    {{\'GN_TP_02\' | translate}} {{torrent.formatBytes(torrent.uploaded)}} ({{torrent.getUpSpeedStrArr()[0]}}{{torrent.getUpSpeedStrArr()[1]}}),\n    {{\'GN_TP_01\' | translate}} {{torrent.formatBytes(torrent.downloaded)}} ({{torrent.getDownSpeedStrArr()[0]}}{{torrent.getDownSpeedStrArr()[1]}})\n  </div>\n  <p></p>\n      <form role="form" ng-submit="doFilter()" class="form-inline actions-form action-toolbar">\n        <div class="form-group">\n          <div class="input-group input-group-sm filter-name">\n            <input class="form-control" type="text" ng-model="filters.name" placeholder="{{\'DLG_RSSDOWNLOADER_06\' | translate}} {{\'FI_COL_NAME\' | translate}}">\n            <span class="input-group-btn">\n              <button class="btn" type="button" ng-disabled="filters.name === \'\'" ng-click="filters.name = \'\'" ><span class="glyphicon glyphicon-remove-circle"></span></button>\n            </span>\n          </div>\n        </div>\n    <div class="form-group">\n      <div class="input-group input-group-sm action-priority">\n          <select ng-model="priorityToSet" class="form-control squared" ng-disabled="hasSelection === false" ng-change="setPriority()">\n            <option value="" disabled selected>{{\'FI_COL_PRIO\' | translate}} </option>\n            <option value="0">{{\'MF_DONT\' | translate}}</option>\n            <option value="1">{{\'MF_LOW\' | translate}}</option>\n            <option value="2">{{\'MF_NORMAL\' | translate}}</option>\n            <option value="3">{{\'MF_HIGH\' | translate}}</option>\n          </select>\n        </div>\n      </div>\n      </form>\n  <p></p>\n  <div class="torrent">\n  <div class="input-group input-group-sm torrent-header details-files-header">\n    <span class="input-group-addon">\n      <input type="checkbox" ng-model="selectCheckbox" ng-change="toggleSelection()" >\n    </span>\n    <span class="form-control name sorter text-center" ng-click="sorter.field = \'name\'; sorter.descending=!sorter.descending">{{\'FI_COL_NAME\' | translate}}\n      <span class="glyphicon" ng-show="sorter.field === \'name\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.descending,\'glyphicon-sort-by-attributes\':!sorter.descending}"></span>\n    </span>\n    <span class="input-group-addon size sorter text-center" >\n      <span ng-click="sorter.field = \'percent\'; sorter.descending=!sorter.descending">%\n        <span class="glyphicon" ng-show="sorter.field === \'percent\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.descending,\'glyphicon-sort-by-attributes\':!sorter.descending}"></span>\n      </span>\n      -\n      <span ng-click="sorter.field = \'size\'; sorter.descending=!sorter.descending">{{\'FI_COL_SIZE\' | translate}}\n        <span class="glyphicon" ng-show="sorter.field === \'size\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.descending,\'glyphicon-sort-by-attributes\':!sorter.descending}"></span>\n      </span>\n    </span>\n    <span class="input-group-addon priority sorter text-center" ng-click="sorter.field = \'priority\'; sorter.descending=!sorter.descending">{{\'FI_COL_PRIO\' | translate}}\n      <span class="glyphicon" ng-show="sorter.field === \'prioritÃ \'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.descending,\'glyphicon-sort-by-attributes\':!sorter.descending}"></span>\n    </span>\n  </div>\n</div>\n<p></p>\n\n<div class="separator"></div>\n<div vs-repeat="30" vs-autoresize class="repeater-container" ng-style="{ height: listHeight + \'px\'}">\n  <div ng-repeat="file in ($parent.filteredFiles = (torrent.files | filter:{name:filters.name} | orderBy:sorter.field:sorter.descending))" class="torrent" data-toggle="context" >\n    <div class="input-group input-group-sm torrent-row selectable" ng-class="{\'selected\':file.selected}" ng-click="toggleSelection(file)">\n      <span class="input-group-addon">\n        <input type="checkbox" ng-model="file.selected" ng-click="checkSelected();$event.stopPropagation()" >\n      </span>\n      <div class="form-control selectable name" >{{ file.name }}\n      </div>\n      <div class="input-group-addon size">\n        <span class="byte-value">{{ torrent.formatBytesStrArr(file.size)[0] }}</span> <span class="byte-uom">{{ torrent.formatBytesStrArr(file.size)[1] }}</span><div class="download-progress" ng-style="{\'width\':file.percent+\'%\'}" ng-class="{\'btn-warning\':(file.percent < 25), \'btn-info\':(file.percent < 99), \'btn-success\':(file.percent > 98)}"></div>\n      </div>\n      <div class="input-group-addon input-group-sm priority text-center">\n      <span class="animate-switch-container"\n        ng-switch on="file.priority">\n          <span ng-switch-when="0">{{\'MF_DONT\' | translate}}</span>\n          <span ng-switch-when="1">{{\'MF_LOW\' | translate}}</span>\n          <span ng-switch-when="2">{{\'MF_NORMAL\' | translate}}</span>\n          <span ng-switch-when="3">{{\'MF_HIGH\' | translate}}</span>\n          <span ng-switch-default>???</span>\n      </span>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- <div vs-repeat="30" vs-autoresize class="repeater-container" ng-style="{ height: listHeight + \'px\'}">\n  <div ng-repeat="item in torrent.files" class="torrent" data-toggle="context" >\n    <div class="input-group input-group-sm torrent-row" ng-class="{\'selected\':item.selected}">\n      <span class="input-group-addon">\n        <input type="checkbox" ng-model="item.selected" ng-change="updateSelected()" >\n      </span>\n      <span class="input-group-addon status" title="{{statusTitle}}" >\n        <span class="glyphicon {{statusClass}} {{statusColor}}"></span>\n      </span>\n      <div title="{{item.name}}" class="form-control selectable name" ng-click="setSelected(item.hash,$event)" >{{item.name}}\n      </div>\n      <div class="input-group-addon selectable size">\n        <span class="byte-value">{{item.getSizeStrArr()[0]}}</span> <span class="byte-uom">{{item.getSizeStrArr()[1]}}</span><div class="download-progress" ng-style="{\'width\':item.getPercentStr()}" ng-class="{\'btn-warning\':(item.percent < 250), \'btn-info\':(item.percent < 999), \'btn-success\':(item.percent > 998)}"></div></div>\n        <span class="input-group-addon selectable speed hide-on-md">\n          <span class="byte-value">{{item.getUpSpeedStrArr()[0]}}</span> <span class="byte-uom">{{item.getUpSpeedStrArr()[1]}}</span>\n          -\n          <span class="byte-value">{{item.getDownSpeedStrArr()[0]}}</span> <span class="byte-uom">{{item.getDownSpeedStrArr()[1]}}</span>\n        </span>\n        <span class="input-group-addon selectable peers hide-on-md">\n          <span class="byte-value">{{item.seedsInSwarm}}</span>\n          -\n          <span class="byte-value">{{item.peersInSwarm}}</span>\n        </span>\n      </div>\n  </div>\n</div> -->\n<div class="separator"></div>\n  <!-- <pre>\n  <code>\n    {{filteredFiles | json}}\n  </code>\n    {{torrent | json}}\n  </pre> -->\n</div>\n')}]),angular.module("views/main.html",[]).run(["$templateCache",function(a){a.put("views/main.html",'<div class="container-fluid" >\n\n  <form role="form" class="form-inline row" id="addtorrent-form">\n    <div class="form-group col-sm-6">\n      <div class="input-group input-group-sm upload-file" >\n        <div ng-file-drop ng-model="newtorrentfiles" class="drop-box form-control"\n            drag-over-class="{accept:\'alert-success\', reject:\'alert-danger\', delay:100}"\n            multiple="true" ng-multiple="true" hideOnDropNotAvailable="false" accept="application/x-bittorrent" dropAvailable="uploadDropSupported" ng-file-change="addTorrentFilesChanged($files, $event, $rejectedFiles)">\n            <div ng-file-select ng-model="newtorrentfiles" ng-multiple="true" accept="application/x-bittorrent" ng-file-change="addTorrentFilesChanged($files, $event, [])">\n                <span>{{\'OV_TB_ADDTORR\' | translate}} ({{\'CLICKORDRAG\' | translate}})</span>\n                <span ng-hide="newtorrentfiles === null || newtorrentfiles.length === 0">({{newtorrentfiles.length}} {{\'SELECTED\' | translate}})</span>\n            </div>\n            </div>\n\n        <span class="input-group-btn">\n          <button type=button ng-hide="newtorrentfiles.length === 0" ng-click="newtorrentfiles = []" class="btn" ><span class="glyphicon glyphicon-remove-circle"></span></button>\n          <button type=button ng-click="addTorrentFiles(newtorrentfiles)" ng-disabled="newtorrentfiles.length === 0" class="btn btn-primary" ><span class="glyphicon glyphicon-upload"></span></button>\n        </span>\n      </div>\n    </div>\n    <div class="form-group col-sm-6">\n      <div class="input-group input-group-sm upload-url" >\n        <input type="text" ng-model="newtorrent" placeholder="{{\'OV_TB_ADDURL\' | translate}}" class="form-control">\n        <span class="input-group-btn">\n          <button type=button ng-hide="newtorrent === \'\'" ng-click="newtorrent = \'\'" class="btn" ><span class="glyphicon glyphicon-remove-circle"></span></button>\n          <button type=button ng-click="addTorrent(newtorrent)" ng-disabled="newtorrent === \'\'" class="btn btn-primary" ><span class="glyphicon glyphicon-upload"></span></button>\n        </span>\n      </div>\n    </div>\n  </form>\n  <p></p>\n\n  <p></p>\n\n  <form role="form" ng-submit="doFilter()" class="form-inline actions-form row" id="filters-form">\n    <div class="form-group col-lg-2 col-sm-3">\n      <div class="input-group input-group-sm filter-autoreload">\n        <span class="input-group-addon"><input type="checkbox" ng-model="autoreloadEnabled" ng-checked="autoreloadEnabled === true" ng-true-value="true" ng-false-value="false" ng-change="reload()"> {{\'AUTORELOAD\' | translate}}</span>\n\n        <div class="btn-group btn-group-sm dropdown" title="{{\'AUTORELOAD\' | translate}}" dropdown>\n          <a role="button" class="btn btn-default dropdown-toggle" dropdown-toggle ng-disabled="autoreloadEnabled === false">\n            {{autoreloadTimeout/1000}} sec <span class="caret"></span>\n          </a>\n          <div class="dropdown-menu btn-group-sm" role="menu">\n            <a role="button" class="btn btn-default" ng-click="autoreloadTimeout = 1000;reload()">\n              1 sec</a>\n            <a role="button" class="btn btn-default" ng-click="autoreloadTimeout = 5000;reload()">\n              5 sec</a>\n            <a role="button" class="btn btn-default" ng-click="autoreloadTimeout = 15000;reload()">\n              15 sec</a>\n            <a role="button" class="btn btn-default" ng-click="autoreloadTimeout = 30000;reload()">\n              30 sec</a>\n          </div>\n        </div>\n        <span class="input-group-btn">\n          <button type=submit class="btn" ng-click="reload()" ng-disabled="refreshing"><span class="glyphicon glyphicon-refresh" ng-class="{\'glyphicon-animate-spin\':refreshing}"></span></button>\n        </span>\n      </div>\n    </div>\n    <div class="form-group col-lg-2 col-sm-3">\n      <div class="input-group input-group-sm filter-name">\n        <span class="input-group-addon"><input ng-disabled="notL33table" type="checkbox" ng-model="filters.l33t" ng-change="doFilter()"> l33t</span>\n        <input class="form-control" type="text" ng-model="filters.name" ng-change="doFilter(true)" placeholder="{{\'DLG_RSSDOWNLOADER_06\' | translate}} {{\'FI_COL_NAME\' | translate}}">\n        <span class="input-group-btn">\n          <button class="btn" type="button" ng-disabled="filters.name === \'\'" ng-click="filters.name = \'\';doFilter()" ><span class="glyphicon glyphicon-remove-circle"></span></button>\n        </span>\n      </div>\n    </div>\n    <div class="form-group col-lg-2 col-sm-3">\n      <div class="input-group input-group-sm filter-label">\n        <div class="btn-group btn-group-sm dropdown" title="{{\'OV_NEWLABEL_CAPTION\' | translate}}" dropdown>\n          <a role="button" class="btn btn-default dropdown-toggle" dropdown-toggle>\n            <span class="glyphicon glyphicon-tags"></span>&nbsp;&nbsp;&nbsp;{{\'DLG_RSSDOWNLOADER_06\' | translate}} {{\'ML_LABEL\' | translate}} <span class="caret"></span>\n          </a>\n            <div class="dropdown-menu btn-group-sm" role="menu">\n              <a role="button" class="btn btn-default" ng-repeat="label in labels" ng-click="filters.label = label[0];doFilter()">\n                <span class="glyphicon glyphicon-tag" ng-style="{color:labelColorMap[label[0]]}"></span>&nbsp;&nbsp;&nbsp;{{ label[0] + \' (\' + label[1] + \')\' }}\n              </a>\n          </div>\n        </div>\n        <span class="input-group-btn">\n          <button class="btn" type="button" ng-disabled="filters.label === \'\'" ng-click="filters.label = \'\';doFilter()" ><span class="glyphicon glyphicon-remove-circle"></span></button>\n        </span>\n      </div>\n    </div>\n    <div class="form-group col-lg-2 col-sm-3">\n      <div class="input-group input-group-sm filter-status">\n        <div class="btn-group btn-group-sm dropdown" title="{{\'OV_NEWLABEL_CAPTION\' | translate}}" dropdown>\n          <a role="button" class="btn btn-default dropdown-toggle" dropdown-toggle>\n            <span class="glyphicon glyphicon-dashboard"></span>&nbsp;&nbsp;&nbsp;{{\'DLG_RSSDOWNLOADER_06\' | translate}}  {{\'OV_COL_STATUS\' | translate}} <span class="caret"></span>\n          </a>\n            <div class="dropdown-menu btn-group-sm" role="menu">\n              <a role="button" class="btn btn-default" ng-click="filters.status = \'completed\';doFilter()">\n                <span class="glyphicon glyphicon-check text-success"></span>&nbsp;&nbsp;&nbsp;{{\'OV_FL_FINISHED\' | translate}}</a>\n              <a role="button" class="btn btn-default" ng-click="filters.status = \'downloading\';doFilter()">\n                <span class="glyphicon glyphicon-collapse-down text-info"></span>&nbsp;&nbsp;&nbsp;{{\'OV_FL_DOWNLOADING\' | translate}}</a>\n              <a role="button" class="btn btn-default" ng-click="filters.status = \'paused\';doFilter()">\n                <span class="glyphicon glyphicon-pause text-info"></span>&nbsp;&nbsp;&nbsp;{{\'OV_FL_PAUSED\' | translate}}</a>\n              <a role="button" class="btn btn-default" ng-click="filters.status = \'queued\';doFilter()">\n                <span class="glyphicon glyphicon-time text-info"></span>&nbsp;&nbsp;&nbsp;{{\'OV_FL_QUEUED\' | translate}}</a>\n              <a role="button" class="btn btn-default" ng-click="filters.status = \'seeding\';doFilter()">\n                <span class="glyphicon glyphicon-collapse-up text-success"></span>&nbsp;&nbsp;&nbsp;{{\'OV_FL_SEEDING\' | translate}}</a>\n          </div>\n        </div>\n        <span class="input-group-btn">\n          <button class="btn" type="button" ng-disabled="filters.status === \'\'" ng-click="filters.status = \'\';doFilter()" ><span class="glyphicon glyphicon-remove-circle"></span></button>\n        </span>\n      </div>\n    </div>\n    <div class="form-group input-group-sm col-lg-2 col-sm-3">\n      <div class="form-control input-group info-text">\n      {{filteredtorrents.length}} {{\'MATCHING_FILTERS\' | translate}}\n      </div>\n    </div>\n\n    <div class="form-group col-lg-2 col-sm-3">\n      <div class="input-group input-group-sm filter-selected">\n        <span class="input-group-addon"><input type="checkbox" ng-model="filters.selected" ng-change="doFilter()"></span>\n        <span class="form-control selectable" ng-click="filters.selected = !filters.selected; doFilter()">\n          {{selectedtorrents.length}} {{\'SELECTED\' | translate}}\n        </span>\n        <span class="input-group-btn">\n          <button class="btn" type="button" ng-click="clearSelected()"><span class="glyphicon glyphicon-remove-circle"></span></button>\n        </span>\n      </div>\n    </div>\n    <div class="form-group input-group-sm col-lg-4 col-sm-6">\n      <div class="form-control input-group info-text">\n        <div class="pull-left">{{torrents.length}} {{\'STM_TORRENTS\' | translate}} </div>\n        <div class="pull-right"><span class="glyphicon glyphicon-circle-arrow-up"></span> {{uploadSpeed | formatBytes}}/s  | <span class="glyphicon glyphicon-circle-arrow-down"></span> {{downloadSpeed | formatBytes}}/s</div></div>\n    </div>\n\n    <fieldset class="form-group btn-toolbar action-toolbar  col-lg-3 col-xs-3" ng-disabled="selectedtorrents.length < 1">\n        <div class="btn-group btn-group-sm btn-group-justified">\n          <a role="button" class="btn btn-default" ng-click="doAction(\'start\')"><span class="glyphicon glyphicon-play"></span> <span class="visible-lg-inline">{{\'ML_START\' | translate}}</span></a>\n          <a role="button" class="btn btn-default middle" ng-click="doAction(\'pause\')"><span class="glyphicon glyphicon-pause"></span> <span class="visible-lg-inline">{{\'ML_PAUSE\' | translate}}</span></a>\n        <a role="button" class="btn btn-default" ng-click="doAction(\'stop\')"><span class="glyphicon glyphicon-stop"></span> <span class="visible-lg-inline">{{\'ML_STOP\' | translate}}</span></a>\n        </div>\n    </fieldset>\n    <fieldset class="form-group btn-toolbar action-toolbar col-lg-2 col-xs-4" ng-disabled="selectedtorrents.length < 1">\n      <div class="btn-group btn-group-sm btn-group-justified">\n        <a role="button" class="btn btn-default" ng-click="doAction(\'forcestart\')" title="{{\'ML_FORCE_START\' | translate}}"><span class="glyphicon glyphicon-play-circle"></span> </a>\n        <a role="button" class="btn btn-default middle" ng-click="doAction(\'recheck\')" title="{{\'ML_FORCE_RECHECK\' | translate}}"><span class="glyphicon glyphicon-repeat"></span> </a>\n        <div class="btn-group btn-group-sm dropdown" dropdown>\n          <a role="button" class="btn btn-default dropdown-toggle" dropdown-toggle title="{{\'ML_REMOVE\' | translate}}">\n            <span class="glyphicon glyphicon-remove"></span> <span class="caret"></span>\n          </a>\n          <div class="dropdown-menu btn-group-sm" role="menu">\n            <a class="btn btn-default" ng-click="doAction(\'remove\')" title="{{\'ML_REMOVE\' | translate}}"><span class="glyphicon glyphicon-remove"></span> {{\'ML_REMOVE\' | translate}}</a>\n            <a class="btn btn-default" ng-click="doAction(\'removedata\')" title="{{\'ML_REMOVE_AND\' | translate}} {{\'ML_DELETE_DATA\' | translate}}"><span class="glyphicon glyphicon-remove"></span> {{\'ML_REMOVE_AND\' | translate}} {{\'ML_DELETE_DATA\' | translate}}</a>\n            <a class="btn btn-default" ng-click="doAction(\'removetorrent\')" title="{{\'ML_REMOVE_AND\' | translate}} {{\'ML_DELETE_TORRENT\' | translate}}"><span class="glyphicon glyphicon-remove"></span> {{\'ML_REMOVE_AND\' | translate}} {{\'ML_DELETE_TORRENT\' | translate}}</a>\n            <a class="btn btn-default" ng-click="doAction(\'removedatatorrent\')" title="{{\'ML_REMOVE_AND\' | translate}} {{\'ML_DELETE_DATATORRENT\' | translate}}"><span class="glyphicon glyphicon-remove"></span> {{\'ML_REMOVE_AND\' | translate}} {{\'ML_DELETE_DATATORRENT\' | translate}}</a>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n\n      <fieldset class="form-group btn-toolbar action-toolbar col-lg-1 col-sm-2 col-xs-3" ng-disabled="selectedtorrents.length < 1">\n        <div class="btn-group btn-group-sm btn-group-justified">\n          <a role="button" class="btn btn-default" ng-click="doAction(\'queuedown\')" title="{{\'ML_QUEUEUP\' | translate}}"><span class="glyphicon glyphicon-chevron-up"></span> </a>\n          <a role="button" class="btn btn-default" ng-click="doAction(\'queueup\')" title="{{\'ML_QUEUEDOWN\' | translate}}"><span class="glyphicon glyphicon-chevron-down"></span> </a>\n      </div>\n    </fieldset>\n\n      <fieldset class="form-group btn-toolbar action-toolbar col-lg-2 col-sm-3 col-xs-2" ng-disabled="selectedtorrents.length < 1">\n        <div class="btn-group btn-group-sm btn-group-justified">\n          <div class="btn-group btn-group-sm dropdown" title="{{\'OV_NEWLABEL_CAPTION\' | translate}}" dropdown>\n            <a role="button" class="btn btn-default dropdown-toggle" dropdown-toggle>\n              <span class="glyphicon glyphicon-tags"></span><span class="hidden-xs">&nbsp;&nbsp;&nbsp;{{\'OV_NEWLABEL_CAPTION\' | translate}}</span> <span class="caret"></span>\n            </a>\n              <div class="dropdown-menu btn-group-sm" role="menu">\n                <a role="button" class="btn btn-default" ng-click="setLabel(\'\')"><span class="glyphicon glyphicon-remove-circle"></span>&nbsp;&nbsp;&nbsp;{{\'OV_REMOVE_LABEL\' | translate}}</a>\n                <a role="button" class="btn btn-default" ng-click="setNewLabel()"><span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;&nbsp;{{\'OV_NEW_LABEL\' | translate}}</a>\n                <a role="button" class="btn btn-default" ng-repeat="label in labels" ng-click="setLabel(label[0])">\n                  <span class="glyphicon glyphicon-tag" ng-style="{color:labelColorMap[label[0]]}"></span>&nbsp;&nbsp;&nbsp;{{ label[0] + \' (\' + label[1] + \')\' }}\n                </a>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n  </form>\n\n<p></p>\n\n<div class="torrent row">\n  <div class="input-group input-group-sm torrent-header">\n    <span class="input-group-addon sorter selectable">\n      <!--span class="glyphicon glyphicon-check" ng-click="sortBy(\'selected\')"></span -->\n      <input type="checkbox" ng-model="selectCheckbox">\n    </span>\n    <span class="input-group-addon queue sorter selectable" ng-click="sortBy(\'torrentQueueOrder\')">\n      # <span class="glyphicon" ng-show="sorter.field === \'torrentQueueOrder\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n    </span>\n    <span class="input-group-addon sorter selectable" ng-click="sortBy(\'status\')">\n      <span class="glyphicon glyphicon-dashboard" ></span>\n      <span class="glyphicon" ng-show="sorter.field === \'status\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n    </span>\n    <span class="form-control selectable name sorter text-center" ng-click="sortBy(\'name\')">{{\'OV_COL_NAME\' | translate}} <div class="pull-right tag-label hidden-xs">{{\'OV_COL_LABEL\' | translate}}</div>\n      <span class="glyphicon" ng-show="sorter.field === \'name\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n    </span>\n    <span class="input-group-addon selectable size sorter text-center" >\n      <span ng-click="sortBy(\'percent\')">%\n        <span class="glyphicon" ng-show="sorter.field === \'percent\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n      </span>\n      <br/>\n      <span ng-click="sortBy(\'size\')">{{\'OV_COL_SIZE\' | translate}}\n        <span class="glyphicon" ng-show="sorter.field === \'size\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n      </span>\n    </span>\n    <span class="input-group-addon selectable sorter text-center speed hidden-xs" >\n      <span ng-click="sortBy(\'uploadSpeed\')">{{\'OV_COL_UPSPD\' | translateMultiLabel:0}}\n        <span class="glyphicon" ng-show="sorter.field === \'uploadSpeed\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n      </span>\n      <br/>\n      <span ng-click="sortBy(\'downloadSpeed\')">{{\'OV_COL_DOWNSPD\' | translateMultiLabel:0}}\n        <span class="glyphicon" ng-show="sorter.field === \'downloadSpeed\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n      </span>\n    </span>\n    <span class="input-group-addon selectable sorter text-center peers hidden-sm hidden-xs" >\n      <span ng-click="sortBy(\'seedsInSwarm\')">{{\'OV_COL_SEEDS\' | translate}}\n        <span class="glyphicon" ng-show="sorter.field === \'seedsInSwarm\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n      </span>\n      <br/>\n      <span ng-click="sortBy(\'peersInSwarm\')">{{\'OV_COL_PEERS\' | translate}}\n        <span class="glyphicon" ng-show="sorter.field === \'peersInSwarm\'" ng-class="{\'glyphicon-sort-by-attributes-alt\':sorter.ascending,\'glyphicon-sort-by-attributes\':!sorter.ascending}"></span>\n      </span>\n    </span>\n  </div>\n</div>\n<p></p>\n\n<div class="separator"></div>\n<div vs-repeat vs-autoresize vs-excess="10" class="repeater-container row" ng-style="{ height: listHeight + \'px\'}">\n  <div ng-repeat="item in filteredtorrents" class="torrent" data-toggle="context" >\n    <torrent-row />\n  </div>\n</div>\n<div class="separator"></div>\n\n    <script type="text/ng-template" id="newLabelModal.html">\n        <div class="modal-header">\n            <h3 class="modal-title">{{\'OV_NEW_LABEL\' | translate}}</h3>\n        </div>\n        <div class="modal-body">\n            <p>{{\'OV_NEWLABEL_TEXT\' | translate}}</p>\n            <input focus-me="true" type="text" class="form-control" ng-model="newLabel" />\n        </div>\n        <div class="modal-footer">\n            <button class="btn btn-primary" ng-click="$close(newLabel)" ng-disabled="newLabel === \'\'">{{\'DLG_BTN_OK\' | translate}}</button>\n            <button class="btn btn-warning" ng-click="$dismiss()">{{\'DLG_BTN_CANCEL\' | translate}}</button>\n        </div>\n    </script>\n\n</div>\n')
}]),angular.module("views/nav.html",[]).run(["$templateCache",function(a){a.put("views/nav.html",'<alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert>\n\n        <div class="top-bar">\n          <tabset class="pull-right tabs">\n            <li><a ng-href="#/"><span class="glyphicon glyphicon-th-list visible-xs-inline"></span><span class="hidden-xs">{{ \'STM_TORRENTS\' | translate }}<span></a></li>\n            <!-- <li><a ng-href="#/settings">{{ \'MM_OPTIONS\' | translate }}</a></li> -->\n            <li><a ng-href="#/about"><span class="glyphicon glyphicon-info-sign visible-xs-inline"></span><span class="hidden-xs">{{ \'MM_HELP\' | translate }}<span></a></li>\n            <li><div class="btn-group pull-right languages" dropdown>\n              <button type="button" class="btn dropdown-toggle flag" dropdown-toggle>\n                <span class="glyphicon glyphicon-globe visible-xs-inline"></span><span class="hidden-xs">{{languageDesc}} <span class="caret"></span><span>\n              </button>\n              <ul class="dropdown-menu" role="menu">\n                <li ng-repeat="lang in languages" >\n                  <a href="javascript:void(0)" ng-click="changeLanguage(lang)">\n                    {{lang.desc}}\n                  </a>\n                </li>\n              </ul>\n            </div>\n            </li>\n          </tabset>\n\n          <h3 class="text-muted header logo">ng-torrent-ui <span class="version">{{currentVersion}} <a target="_BLANK" class="text-danger" href="https://github.com/psychowood/ng-torrent-ui/releases" ng-show="updatedVersion && currentVersion !== updatedVersion">({{updatedVersion}} available for download)</a> <span ng-show="serverVersion"> - {{serverVersion}}</span></span> </h3>\n        </div>\n\n        <!-- div class="footer">\n          <p></p>\n        </div-->\n')}]),angular.module("views/settings.html",[]).run(["$templateCache",function(a){a.put("views/settings.html",'<div class="container">\n  <form class="form-horizontal" role="form" ng-submit="signIn()">\n\n    <div class="form-group">\n      <label for="utUrl" class="col-sm-2 control-label">uTorrent url</label>\n      <div class="col-sm-10">\n        <input type="url" class="form-control" id="utUrl" placeholder="Enter uTorrent url - http://hostname:port/gui/" ng-model="url">\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label for="utUser" class="col-sm-2 control-label">UserName</label>\n      <div class="col-sm-4">\n        <input type="text" class="form-control" id="utUser" placeholder="Enter username" ng-model="user">\n      </div>\n      <label for="utPass" class="col-sm-2 control-label">Password</label>\n      <div class="col-sm-4">\n        <input type="password" class="form-control" id="utPass" placeholder="Enter password" ng-model="password">\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label for="utToken" class="col-sm-2 control-label">Token</label>\n      <div class="col-sm-10">\n        <input disabled type="text" class="form-control" id="utToken" placeholder="No token available - Did you sign in?" ng-model="token">\n      </div>\n    </div>\n\n    <div class="form-group">\n      <div class="pull-right">\n        <button type="submit" class="btn btn-default">Sign in</button>\n      </div>\n    </div>\n  </form>\n    <pre>\n      {{settings | json}}\n    </pre>\n    <pre>\n      {{service | json}}\n    </pre>\n\n</div>\n')}]),angular.module("views/torrent-row.html",[]).run(["$templateCache",function(a){a.put("views/torrent-row.html",'<div class="input-group input-group-sm torrent-row" ng-class="{\'selected\':item.selected}">\n  <span class="input-group-addon">\n    <input type="checkbox" ng-model="item.selected" ng-change="updateSelected()" >\n  </span>\n  <span class="input-group-addon queue" >\n    {{item.getQueueStr()}}\n  </span>\n  <span class="input-group-addon status" title="{{statusTitle}}" >\n    <span class="glyphicon {{statusClass}} {{statusColor}}"></span>\n  </span>\n  <div title="{{item.name}}" class="form-control selectable name" ng-click="setSelected(item.hash,$event)" >{{item.decodedName}}\n  </div>\n  <div class="tag-label input-group-addon"><span class="btn btn-default btn-xs nocursor" ng-hide="item.getMainLabel() === \'\'"><span class="glyphicon glyphicon-tag" ng-style="{color:labelColorMap[item.getMainLabel()]}" title=\'{{item.getMainLabel()}}\'></span><span class="hidden-xs">{{item.getMainLabel()}}</span></span></div>\n  <span class="info-button input-group-btn selectable">\n    <button class="btn btn-link" ng-click="doAction(\'info\',item)">\n      <span class="glyphicon glyphicon-info-sign"></span>\n    </button>\n  </span>\n  <div class="input-group-addon selectable size">\n    <span class="byte-value">{{item.getSizeStrArr()[0]}}</span> <span class="byte-uom">{{item.getSizeStrArr()[1]}}</span><div class="download-progress" ng-style="{\'width\':item.getPercentStr()}" ng-class="{\'btn-warning\':(item.percent < 250), \'btn-info\':(item.percent < 999), \'btn-success\':(item.percent > 998)}"></div></div>\n    <span class="input-group-addon selectable speed hidden-xs">\n      <span class="byte-value">{{item.getUpSpeedStrArr()[0]}}</span> <span class="byte-uom">{{item.getUpSpeedStrArr()[1]}}</span>\n      -\n      <span class="byte-value">{{item.getDownSpeedStrArr()[0]}}</span> <span class="byte-uom">{{item.getDownSpeedStrArr()[1]}}</span>\n    </span>\n    <span class="input-group-addon selectable peers hidden-sm hidden-xs">\n      <span class="byte-value">{{item.seedsInSwarm}}</span>\n      -\n      <span class="byte-value">{{item.peersInSwarm}}</span>\n    </span>\n    <!-- <span class="input-group-btn">\n      <button class="btn {{btnClass}}" ng-click="doAction(\'{{btnAction}}\',item)">\n        <span class="glyphicon {{btnIcon}}"></span>\n      </button>\n    </span> -->\n  </div>\n')}]),angular.module("utorrentNgwebuiApp").controller("TorrentsCtrl",["$scope","$window","$modal","$filter","$timeout","$log","uTorrentService","Torrent","toastr",function(a,b,c,d,e,f,g,h,i){function j(b){var c,d=0,e=0,f=[];for(c=0;c<b.length;c++)b[c].selected&&f.push(b[c]),d+=b[c].uploadSpeed,e+=b[c].downloadSpeed;return a.uploadSpeed=d,a.downloadSpeed=e,f}function k(b){var c=[];return b?c.push(b.hash):angular.forEach(a.selectedtorrents,function(a){c.push(a.hash)}),c}a.headerHeight=350,a.setListHeight=function(){a.listHeight=b.innerHeight-200},angular.element(b).bind("resize",function(){a.setListHeight(),a.$apply()}),a.setListHeight(),a.labels=[],a.labelColorMap={},a.torrents=[],a.filteredtorrents=[],a.selectedtorrents=[];var l,m=g.cacheMap;a.autoreloadTimeout=5e3,a.autoreloadEnabled=a.autoreloadTimeout>0,a.newtorrent="",a.newtorrentfiles=[],a.uploadDropSupported=!0;var n=["#B0C4DE","#B0E0E6","#87CEEB","#87CEFA","#00BFFF","#1E90FF","#6495ED","#4682B4","#4169E1","#0000FF","#0000CD","#6A5ACD","#7B68EE","#00008B","#000080","#191970"],o=function(b){var c,d=n.length,e=angular.copy(b).sort(function(a,b){var c=a[1],d=b[1];return c===d?0:c>d?1:-1});for(c=0;c<e.length;c++)a.labelColorMap[e[c][0]]=n[c%d]};a.addTorrent=function(b){var c=g.torrent().addUrl({data:b});c.$promise.then(function(){i.info("Torrent added succesfully",null,{timeOut:1e3}),a.newtorrent=""})},a.addTorrentFiles=function(b){var c,d=0,e=function(){d++,c===b.length-1&&(i.info(d+" torrent added succesfully",null,{timeOut:2500}),a.newtorrentfiles=[])};for(c=0;c<b.length;c++){var f=b[c];g.uploadTorrent(f).success(e)}},a.addTorrentFilesChanged=function(a,b,c){var d,e=0;if(c&&c.length>0)for(d=0;d<c.length;d++)e++;for(d=0;d<a.length;d++)-1===a[d].name.search(/^.*\.torrent$/i)&&e++;e>0&&i.warning(e+" files ignored (not .torrent files)",null,{timeOut:2500})},a.doAction=function(b,c){var d=k(c);if("info"===b)return void a.showDetails(c);var e=g.actions()[b];if(e){var f=e({hash:d});return f.$promise.then(function(){}),f}i.warning("Action "+b+" not yet supported",null,{timeOut:1e3})},a.setLabel=function(b,c){var d=k(c),e=g.setLabel;if(a.labelToSet="",e){var f=e(d,b);return f.success(function(){""===b?i.info("Label removed",null,{timeOut:2500}):i.info('Label set to "'+b+'"',null,{timeOut:2500})}),f}i.warning("Setting label not supported",null,{timeOut:1e3})},a.setNewLabel=function(b){var d=c.open({templateUrl:"newLabelModal.html",backdrop:!0});d.result.then(function(c){return a.setLabel(c,b)},function(){})},a.filterspanel={open:!0,filters:{name:"",label:"",l33t:!0,selected:!1,status:""}},a.filters=a.filterspanel.filters,a.sorter={field:"torrentQueueOrder",secondField:"name",ascending:!0},a.doSort=function(){f.info("sorting");var b=function(a,b){return a===b?0:a>b?1:-1},c=function(c,d){var e,f,g,h=c,i=d;return h===i?0:(a.sorter.ascending&&(e=i,i=h,h=e),"function"==typeof h[a.sorter.field]?(f=h[a.sorter.field](),g=i[a.sorter.field]()):(f=h[a.sorter.field],g=i[a.sorter.field]),f===g?0:b(f,g))};a.filteredtorrents=a.filteredtorrents.sort(c)},a.sortBy=function(b){a.sorter.field===b?a.sorter.ascending=!a.sorter.ascending:a.sorter.field=b,a.doSort()};var p;a.notL33table=!1,a.doFilter=function(c){a.notL33table=-1===a.filters.name.search(/^[a-z0-9 ]+$/i),e.cancel(p);var g=function(){f.info("filtering");var c,e,g,h={};if(null===a.filters.label?delete h.label:h.label=a.filters.label,null===a.filters.status?delete h.status:h.status=a.filters.status,h.selected=a.filters.selected,null===a.filters.name||""===a.filters.name)delete h.name;else{var i=a.filters.name.split(" ").join(".");if(h.name=i,!a.notL33table&&a.filters.l33t===!0){var j="";for(c=0;c<i.length;c++)e=i.charAt(c),g=b.L33t.Translate(e),j+=e===g?e:"["+e+g+"]";h.name=j}}a.filteredtorrents=d("filter")(a.torrents,function(a){var b=!0;if(h.label&&(b=a.label===h.label),h.selected&&(b=a.selected===!0),h.status)switch(h.status){case"completed":b=a.isStatusCompleted();break;case"downloading":b=a.isStatusDownloading();break;case"paused":b=a.isStatusPaused();break;case"queued":b=a.isStatusQueued();break;case"seeding":b=a.isStatusSeeding()}if(b&&h.name&&""!==h.name){var c=a.name;b=c.search(new RegExp(h.name,"i"))>-1}return b}),a.doSort()};c===!0?p=e(g,500):g()},a.filterBy=function(){a.doFilter()};var q=function(a){return a.replace(/[\._]/g," ").replace(/(\[[^\]]*\])(.*)$/,"$2 $1").trim()};a.reload=function(b){if(!a.refreshing){a.refreshing=!0,e.cancel(l),f.info("reload torrents");var c=g.torrents().list();c.$promise.then(function(){var d,i,k=!1;if(a.labels=c.label,o(a.labels),null===m&&(m={}),c.torrents&&c.torrents.length>0){k=!0,f.debug('"torrents" key with '+c.torrents.length+" elements");var n={};for(d=0;d<c.torrents.length;d++)i=h.build(c.torrents[d],null,q(c.torrents[d][2])),m[i.hash]&&(i.selected=m[i.hash].selected,i.files=m[i.hash].files),n[i.hash]=i;m=n}if(c.torrentp&&c.torrentp.length>0)for(k=!0,f.debug('"torrentp" key with '+c.torrentp.length+" elements"),d=0;d<c.torrentp.length;d++)i=h.build(c.torrentp[d],null,q(c.torrentp[d][2])),m[i.hash]&&(i.selected=m[i.hash].selected,i.files=m[i.hash].files),m[i.hash]=i;if(c.torrentm&&c.torrentm.length>0)for(k=!0,f.debug('"torrentm" key with '+c.torrentm.length+" elements"),d=0;d<c.torrentm.length;d++)delete m[c.torrentm[d]];k?(a.torrents=[],angular.forEach(m,function(b){a.torrents.push(b)}),a.doFilter(),g.cacheMap=m,a.selectedtorrents=j(a.torrents)):f.debug("no changes"),b!==!0&&a.autoreloadEnabled===!0&&a.autoreloadTimeout>-1&&(l=e(a.reload,a.autoreloadTimeout)),a.torrentsMap=m,r(a.lastTorrentDetails),a.refreshing=!1})}};var r=function(b){b&&(a.doAction("getprops",b).$promise.then(function(a){b.props=a.props[0]}),a.doAction("getfiles",b).$promise.then(function(a){var c,d=a.files;if(b.files)for(c=0;c<b.files.length;c++)d[c].selected=b.files[c].selected;b.files=d}))};a.showSearch=function(){var b=c.open({templateUrl:"views/yts-movies.html",controller:"YtsMoviesCtrl",windowClass:"modal-search",backdrop:!0,resolve:{addTorrent:function(){return a.addTorrent}}});b.result.then(function(){},function(){a.lastTorrentDetails=null})},a.showDetails=function(b){a.lastTorrentDetails=b,r(b);var d=c.open({templateUrl:"views/details-dialog.html",controller:"DetailsDialogCtrl",windowClass:"modal-details",backdrop:!0,resolve:{torrent:function(){return a.lastTorrentDetails}}});d.result.then(function(){},function(){var c;for(c=0;c<b.files.length;c++)b.files[c].selected=!1;a.lastTorrentDetails=null})},a.updateSelected=function(){a.selectedtorrents=j(a.torrents)},a.lastSelectedHash=null,a.setSelected=function(b,c){var d,e=c.ctrlKey||c.metaKey,f=c.shiftKey,g=0;if(f){var h=-1,i=-1;for(d=0;d<a.filteredtorrents.length&&(-1===h&&a.filteredtorrents[d].hash===b&&(h=d),-1===i&&a.filteredtorrents[d].hash===a.lastSelectedHash&&(i=d),-1===h||-1===i);d++);if(h===i)return;for(-1===i&&(i=0),h>i?(g=h+1,d=i):(g=i+1,d=h);g>d;d++)a.filteredtorrents[d].selected=!0}else if(e)for(d=0;d<a.torrents.length;d++)a.torrents[d].hash===b&&(a.torrents[d].selected=!a.torrents[d].selected);else for(d=0;d<a.torrents.length;d++){var j=a.torrents[d].hash===b;a.torrents[d].selected=j}a.lastSelectedHash=b,a.updateSelected()},a.selectCheckbox=!1,a.clearSelected=function(){var b;for(b=0;b<a.selectedtorrents.length;b++)a.selectedtorrents[b].selected=!1;a.updateSelected()},a.$watch("selectCheckbox",function(b){var c;for(c=0;c<a.filteredtorrents.length;c++)a.filteredtorrents[c].selected=b;a.updateSelected()}),a.$on("$destroy",function(){}),g.init().then(function(){a.reload()},function(){f.error("error",arguments)}),a.$on("$routeChangeStart",function(){e.cancel(l)})}]),angular.module("utorrentNgwebuiApp").controller("AboutCtrl",["$scope","uTorrentService",function(a,b){a.url=b.url}]),angular.module("utorrentNgwebuiApp").controller("SettingsCtrl",["$scope","$window","$modal","$filter","$timeout","$log","uTorrentService","toastr",function(a,b,c,d,e,f,g,h){a.service=g,a.signIn=function(){g.conf.url=a.url,g.conf.user=a.user,g.conf.password=a.password},g.init().then(function(b){a.token=b;var c=g.actions().getsettings;if(c){var d=c();return d.$promise.then(function(b){a.settings=b}),d}h.warning("Cannot get settings",null,{timeOut:2500})},function(){h.warning("Cannot connect",null,{timeOut:5e4})})}]),angular.module("utorrentNgwebuiApp").factory("Torrent",["$window","$log",function(a,b){function c(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){this.selected=!1,this.hash=a,this.status=b,this.name=c,this.size=d,this.percent=e,this.downloaded=f,this.uploaded=g,this.ratio=h,this.uploadSpeed=i,this.downloadSpeed=j,this.eta=k,this.label=l,this.peersConnected=m,this.peersInSwarm=n,this.seedsConnected=o,this.seedsInSwarm=p,this.availability=q,this.torrentQueueOrder=r,this.remaining=s,this.additionalData=t,this.decodedName=u?u:this.name,this.getStatuses()}function d(a){if(g[a])return g[a];var b,c;return 1024>a?(b=a,c="B"):1048576>a?(b=(a/1024).toFixed(1),c="KB"):1073741824>a?(b=(a/1048576).toFixed(1),c="MB"):(b=(a/1073741824).toFixed(1),c="GB"),[b,c]}var e={1:"started",2:"checking",4:"startaftercheck",8:"checked",16:"error",32:"paused",64:"queued",128:"loaded"},f=[1,2,4,8,16,32,64,128].reverse();c.prototype.getStatusFlag=function(a){return(this.status&a)===a},c.prototype.getStatuses=function(){var a=0;if(this.statusesCached)return this.statusesCached;var c=[];for(a=0;a<f.length;a++)this.getStatusFlag(f[a])&&c.push(e[f[a]]);return this.status>255&&(c.push("unknown"),b.warn("unknown status: "+this.status)),1e3===this.percent&&c.push("completed"),this.statusesCached=c,this.statusesCached},c.prototype.isStatusStarted=function(){return this.getStatusFlag(1)},c.prototype.isStatusChecking=function(){return this.getStatusFlag(2)},c.prototype.isStatusStartAfterCheck=function(){return this.getStatusFlag(4)},c.prototype.isStatusChecked=function(){return this.getStatusFlag(8)},c.prototype.isStatusError=function(){return this.getStatusFlag(16)},c.prototype.isStatusPaused=function(){return this.getStatusFlag(32)},c.prototype.isStatusQueued=function(){return this.getStatusFlag(64)&&!this.isStatusDownloading()},c.prototype.isStatusLoaded=function(){return this.getStatusFlag(128)},c.prototype.isStatusCompleted=function(){return 1e3===this.percent},c.prototype.isStatusDownloading=function(){return this.isStatusStarted()&&!this.isStatusCompleted()},c.prototype.isStatusSeeding=function(){return this.isStatusStarted()&&this.isStatusCompleted()},c.prototype.getQueueStr=function(){return-1===this.torrentQueueOrder?"*":this.torrentQueueOrder},c.prototype.getPercentStr=function(){return(this.percent/10).toFixed(0)+"%"},c.prototype.getData=function(){return this.additionalData};var g={};return c.prototype.formatBytesStrArr=function(a){return d(a)},c.prototype.formatBytes=function(a){return d(a).join("")},c.prototype.getDownloadedStrArr=function(){return this.downloadedStrArr||(this.downloadedStrArr=d(this.downloaded)),this.downloadedStrArr},c.prototype.getUploadedStrArr=function(){return this.uploadedStrArr||(this.uploadedStrArr=d(this.uploaded)),this.uploadedStrArr},c.prototype.getSizeStrArr=function(){return this.sizeStrArr||(this.sizeStrArr=d(this.size)),this.sizeStrArr},c.prototype.getUpSpeedStrArr=function(){if(!this.upSpeedStrArr){var a=d(this.uploadSpeed);a[1]=a[1]+"/s",this.upSpeedStrArr=a}return this.upSpeedStrArr},c.prototype.getDownSpeedStrArr=function(){if(!this.downSpeedStrArr){var a=d(this.downloadSpeed);a[1]=a[1]+"/s",this.downSpeedStrArr=a}return this.downSpeedStrArr},c.prototype.getLabels=function(){return"string"==typeof this.label?[this.label]:this.label},c.prototype.getMainLabel=function(){var a=this.getLabels();return a&&a.length>0?a[0]:""},c.build=function(a,b,d){return new c(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],b,d)},c}]).service("uTorrentService",["$http","$resource","$log","$upload","$q",function(a,b,c,d,e){var f=null,g={url:"/gui/",password:null,token:null,cid:0,build:-1},h={response:function(a){g.cid=a.data.torrentc},responseError:function(a){console.log("error in interceptor",g,arguments,a)}};return{cacheMap:{},conf:g,init:function(){return g.token?(c.info("token already cached"),f.resolve(g.token),f.promise):null!==f?(c.info("token load in progress. Deferring callback"),f.promise):(f=e.defer(),c.info("get token"),a.get(g.url+"token.html?t="+Date.now(),{timeout:5e3}).success(function(a){var b=a.match(/>([^<]+)</);b&&(g.token=b[b.length-1],f.resolve(g.token),c.info("got token "+g.token))}).error(function(){f.reject("Error loading token"),c.error(arguments)}),f.promise)},torrent:function(){return b(g.url+".?token=:token&:action:opt:data&t=:t",{token:g.token,t:Date.now()},{addUrl:{method:"GET",params:{action:"action=add-url",opt:"&s="},isArray:!1}})},uploadTorrent:function(a){return d.upload({url:g.url+"?token="+g.token+"&action=add-file&download_dir=0",method:"POST",file:a,fileFormDataName:"torrent_file"})},torrents:function(){return b(g.url+".?:action:data&token=:token&cid=:cid:opt&t=:t",{token:g.token,cid:g.cid,t:Date.now()},{list:{method:"GET",params:{action:"list=1"},interceptor:h,isArray:!1}})},actions:function(){return b(g.url+".?action=:action&token=:token&t=:t",{token:g.token,cid:g.cid,t:Date.now()},{start:{params:{action:"start"}},stop:{params:{action:"stop"}},pause:{params:{action:"pause"}},remove:{params:{action:"remove"}},removedata:{params:{action:"removedata"}},removetorrent:{params:{action:"removetorrent"}},removedatatorrent:{params:{action:"removedatatorrent"}},forcestart:{params:{action:"forcestart"}},recheck:{params:{action:"recheck"}},queueup:{params:{action:"queueup"}},queuedown:{params:{action:"queuedown"}},getprops:{params:{action:"getprops"}},getfiles:{params:{action:"getfiles"},transformResponse:function(a){var b,c,d=angular.fromJson(a).files[1],e=[];for(b=0;b<d.length;b++)c=d[b],e.push({hash:b,name:c[0],size:c[1],percent:(c[2]/c[1]*100).toFixed(2),priority:c[3]});return{files:e}}},getsettings:{params:{action:"getsettings"},isArray:!0,transformResponse:function(a){var b=angular.fromJson(a);g.build=b.build,b=b.settings;var c,d,e=[],f=["int","bool","string"];for(c=0;c<b.length;c++)d={name:b[c][0],type:f[b[c][1]],value:b[c][2],others:b[c].length>2?b[c][3]:void 0},e.push(d);return e}}})},setLabel:function(b,c){var d,e="";for(d=0;d<b.length;d++)e+="&"+["hash="+b[d],"s=label","v="+encodeURIComponent(c)].join("&");return a.get(g.url+"?token="+g.token+"&action=setprops"+e,{params:{t:Date.now()}})},filePriority:function(){return b(g.url+".?token=:token&action=setprio&hash=:hash&t=:t&p=:priority",{token:g.token,t:Date.now()},{set:{method:"GET"}})},getVersion:function(){var a=function(){var a="Î¼Torrent",b="build";return[a,b,g.build].join(" ")};return-1===g.build?"":a()}}}]),function(a){var b={};b.Translate=function(a,b){if(b||(b=45),b=b>=100?100:0>=b?0:b,0===b)return a;var c="",d=0;for(d=0;d<a.length;d++){var e=a.charAt(d);if(17>b&&b>0)switch(e){case"e":c+="3";break;case"E":c+="3";break;default:c+=e}else if(33>b&&b>16)switch(e){case"a":c+="4";break;case"e":c+="3";break;case"i":c+="1";break;case"o":c+="0";break;case"A":c+="4";break;case"E":c+="3";break;case"I":c+="1";break;case"O":c+="0";break;default:c+=e}else if(49>b&&b>32)switch(e){case"a":c+="4";break;case"e":c+="3";break;case"i":c+="1";break;case"o":c+="0";break;case"A":c+="4";break;case"E":c+="3";break;case"I":c+="1";break;case"O":c+="0";break;case"s":c+="5";break;case"S":c+="5";break;case"t":c+="7";break;case"T":c+="7";break;case"z":c+="2";break;case"Z":c+="2";break;default:c+=e}else if(65>b&&b>48)switch(e){case"a":c+="4";break;case"e":c+="3";break;case"i":c+="1";break;case"o":c+="0";break;case"A":c+="4";break;case"E":c+="3";break;case"I":c+="1";break;case"O":c+="0";break;case"k":c+="|{";break;case"K":c+="|{";break;case"s":c+="5";break;case"S":c+="5";break;case"g":c+="9";break;case"G":c+="9";break;case"l":c+="Â£";break;case"L":c+="Â£";break;case"c":c+="(";break;case"C":c+="(";break;case"t":c+="7";break;case"T":c+="7";break;case"z":c+="2";break;case"Z":c+="2";break;case"y":c+="Â¥";break;case"Y":c+="Â¥";break;case"u":c+="Âµ";break;case"U":c+="Âµ";break;case"f":c+="Æ";break;case"F":c+="Æ";break;case"d":c+="Ã";break;case"D":c+="Ã";break;default:c+=e}else if(81>b&&b>64)switch(e){case"a":c+="4";break;case"e":c+="3";break;case"i":c+="1";break;case"o":c+="0";break;case"A":c+="4";break;case"E":c+="3";break;case"I":c+="1";break;case"O":c+="0";break;case"k":c+="|{";break;case"K":c+="|{";break;case"s":c+="5";break;case"S":c+="5";break;case"g":c+="9";break;case"G":c+="9";break;case"l":c+="Â£";break;case"L":c+="Â£";break;case"c":c+="(";break;case"C":c+="(";break;case"t":c+="7";break;case"T":c+="7";break;case"z":c+="2";break;case"Z":c+="2";break;case"y":c+="Â¥";break;case"Y":c+="Â¥";break;case"u":c+="Âµ";break;case"U":c+="Âµ";break;case"f":c+="Æ";break;case"F":c+="Æ";break;case"d":c+="Ã";break;case"D":c+="Ã";break;case"n":c+="|\\|";break;case"N":c+="|\\|";break;case"w":c+="\\/\\/";break;case"W":c+="\\/\\/";break;case"h":c+="|-|";break;case"H":c+="|-|";break;case"v":c+="\\/";break;case"V":c+="\\/";break;case"m":c+="|\\/|";break;case"M":c+="|\\/|";break;default:c+=e}else if(b>80&&100>b)switch(e){case"a":c+="4";break;case"e":c+="3";break;case"i":c+="1";break;case"o":c+="0";break;case"A":c+="4";break;case"E":c+="3";break;case"I":c+="1";break;case"O":c+="0";break;case"s":c+="5";break;case"S":c+="5";break;case"g":c+="9";break;case"G":c+="9";break;case"l":c+="Â£";break;case"L":c+="Â£";break;case"c":c+="(";break;case"C":c+="(";break;case"t":c+="7";break;case"T":c+="7";break;case"z":c+="2";break;case"Z":c+="2";break;case"y":c+="Â¥";break;case"Y":c+="Â¥";break;case"u":c+="Âµ";break;case"U":c+="Âµ";break;case"f":c+="Æ";break;case"F":c+="Æ";break;case"d":c+="Ã";break;case"D":c+="Ã";break;case"n":c+="|\\|";break;case"N":c+="|\\|";break;case"w":c+="\\/\\/";break;case"W":c+="\\/\\/";break;case"h":c+="|-|";break;case"H":c+="|-|";break;case"v":c+="\\/";break;case"V":c+="\\/";break;case"k":c+="|{";break;case"K":c+="|{";break;case"r":c+="Â®";break;case"R":c+="Â®";break;case"m":c+="|\\/|";break;case"M":c+="|\\/|";break;case"b":c+="Ã";break;case"B":c+="Ã";break;case"q":c+="Q";break;case"Q":c+="QÂ¸";break;case"x":c+=")(";break;case"X":c+=")(";break;default:c+=e}else if(b>99)switch(e){case"a":c+="4";break;case"e":c+="3";break;case"i":c+="1";break;case"o":c+="0";break;case"A":c+="4";break;case"E":c+="3";break;case"I":c+="1";break;case"O":c+="0";break;case"s":c+="5";break;case"S":c+="5";break;case"g":c+="9";break;case"G":c+="9";break;case"l":c+="Â£";break;case"L":c+="Â£";break;case"c":c+="(";break;case"C":c+="(";break;case"t":c+="7";break;case"T":c+="7";break;case"z":c+="2";break;case"Z":c+="2";break;case"y":c+="Â¥";break;case"Y":c+="Â¥";break;case"u":c+="Âµ";break;case"U":c+="Âµ";break;case"f":c+="Æ";break;case"F":c+="Æ";break;case"d":c+="Ã";break;case"D":c+="Ã";break;case"n":c+="|\\|";break;case"N":c+="|\\|";break;case"w":c+="\\/\\/";break;case"W":c+="\\/\\/";break;case"h":c+="|-|";break;case"H":c+="|-|";break;case"v":c+="\\/";break;case"V":c+="\\/";break;case"k":c+="|{";break;case"K":c+="|{";break;case"r":c+="Â®";break;case"R":c+="Â®";break;case"m":c+="|\\/|";break;case"M":c+="|\\/|";break;case"b":c+="Ã";break;case"B":c+="Ã";break;case"j":c+="_|";break;case"J":c+="_|";break;case"P":c+="|Â°";break;case"q":c+="Â¶";break;case"Q":c+="Â¶Â¸";break;case"x":c+=")(";break;case"X":c+=")(";break;default:c+=e}}return c},a.L33t=b}(window),angular.module("utorrentNgwebuiApp").directive("torrentRow",function(){return{priority:1e3,templateUrl:"views/torrent-row.html",restrict:"E",replace:!0,link:function(a){var b,c,d,e,f,g,h=a.item;h.getStatuses(),h.isStatusError()&&!h.isStatusCompleted()?(b="exclamation-sign",c="Error",d="text-danger"):h.isStatusLoaded()?h.isStatusChecking()?(b="repeat",c="Checking",d="text-info"):h.isStatusChecked()?h.isStatusPaused()?(b="pause",c="Paused",d="text-info"):h.isStatusSeeding()?(b="collapse-up",c="Seeding",d="text-success"):h.isStatusDownloading()?(b="collapse-down",c="Downloading",d="text-info",e="warning",f="pause",g="pause"):h.isStatusStartAfterCheck()?(b="repeat",c="Start after checking",d="text-info"):h.isStatusQueued()?(b="time",c="Queued",d="text-info"):h.isStatusLoaded()&&h.isStatusChecked()?h.isStatusCompleted()?(b="check",c="Completed",d="text-success",e="",f="stop",g="stop"):(b="unchecked",c="Ready",d="",e="success",f="play-circle",g="start"):(b="question-sign",c="Status not supported: "+parseInt(h.status).toString(2)):(b="warning-sign",c="Torrent needs checking",d="text-warning"):(b="warning-sign",c="Torrent not loaded",d="text-danger"),a.statusClass="glyphicon-"+b,a.statusTitle=c,a.statusColor=d,a.btnClass="btn-"+e,a.btnIcon="glyphicon-"+f}}}),angular.module("utorrentNgwebuiApp").controller("DetailsDialogCtrl",["$scope","$modalInstance","torrent","uTorrentService","toastr",function(a,b,c,d,e){a.hasSelection=!1,a.filters={name:""},a.sorter={field:"name",descending:!1},a.torrent=c,a.filteredFiles=c.files,a.checkSelected=function(){var b;for(b=0;b<c.files.length;b++)if(c.files[b].selected===!0)return void(a.hasSelection=!0);a.hasSelection=!1},a.toggleSelection=function(b){a.hasSelection=!0;var d;if(b)for(d=0;d<c.files.length;d++)c.files[d].selected=c.files[d]===b;else{var e=a.selectCheckbox===!0;for(a.hasSelection=e,d=0;d<a.filteredFiles.length;d++)a.filteredFiles[d].selected=e}},a.setPriority=function(){var b,f=[];for(b=0;b<c.files.length;b++)c.files[b].selected===!0&&f.push(c.files[b].hash);d.filePriority().set({hash:c.hash,priority:a.priorityToSet,f:f}).$promise.then(function(){e.info("Priority changed succesfully",null,{timeOut:1e3}),a.priorityToSet=""})}}]),angular.module("utorrentNgwebuiApp").filter("formatBytes",function(){return function(a){var b,c;return 1024>a?(b=a,c="B"):1048576>a?(b=(a/1024).toFixed(1),c="KB"):1073741824>a?(b=(a/1048576).toFixed(1),c="MB"):(b=(a/1073741824).toFixed(1),c="GB"),[b,c].join(" ")}}),angular.module("utorrentNgwebuiApp").controller("IssueReporterCtrl",["$scope","uTorrentService","$window",function(a,b,c){var d="https://github.com/psychowood/ng-torrent-ui/issues/new/",e="mailto:ngtorrentui@gmail.com";a.newIssueUrl=d;var f=function(){var a=b.getVersion();return"Describe your issue here%0A%0A------------------------%0A"+c.encodeURIComponent("**Version:** "+c.document.title)+"%0A"+c.encodeURIComponent("**Server:** "+a)+"%0A"+c.encodeURIComponent("**User-agent:** "+c.navigator.userAgent)};a.prepareNewIssueUrl=function(){return a.newIssueUrl=d+"?body="+f(),!1},a.prepareNewMailUrl=function(){return a.newMailUrl=e+"?body="+f(),!1}}]),angular.module("utorrentNgwebuiApp").factory("translationsLoader",["$http","$q",function($http,$q){var languages,constants;return function(options){var deferred=$q.defer(),isGetOptions="getoptions"===options,load=function(a){return isGetOptions?deferred.resolve({languages:languages,constants:constants}):void $http.get(["langs/utorrent/",a.key,".js.json"].join("")).then(function(b){var c=b.data,d={};angular.forEach(constants,function(a,b){d[b]=c[a]?c[a]:"UNDEFINED_"+b},d),$http.get(["langs/",a.key,".json"].join("")).then(function(a){return angular.extend(d,a.data),deferred.resolve(d)},function(){return deferred.resolve(d)})},function(a){console.log(a),deferred.reject(a)})};return languages&&constants?load(options):$http.get("langs/utorrent/!base.js").then(function(response){var invertDefine="Array.prototype.invert = function() { var h = {}; for (var g = 0, f = this.length; g < f; ++g) { h[this[g]] = g } return h; };",array=eval("'use strict';"+invertDefine+response.data+";[LANG_CONST,LANG_LIST]");constants=array[0],languages=array[1],load(options)},function(a){console.log(a)}),deferred.promise}}]).filter("translateMultiLabel",["$parse","$translate",function(a,b){var c={},d=function(a,b){var d=c[a];return d||(d=a.split("||"),c[a]=d),1===d.length?d[0]:(""===d[0]&&b++,b>d.length?d[d.length]:d[b])},e=function(c,e,f,g){angular.isObject(f)||(f=a(f)(this));var h=b.instant(c,f,g);return d(h,e)};return e.$stateful=!0,e}]);